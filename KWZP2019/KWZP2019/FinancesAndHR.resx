<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnFinances.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>